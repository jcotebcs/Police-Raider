name: Police Raider CI/CD

on:
  push:
    branches: [ main, develop, auto/audit-fix/* ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'
  POLICE_RAIDER_MODE: mock

jobs:
  lint-and-test:
    name: Lint, Test & Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint
      
    - name: Run tests
      run: npm test
      
    - name: Run security audit
      run: npm audit --audit-level=high
      
    - name: Upload test coverage
      uses: codecov/codecov-action@v3
      if: success()
      
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  build-and-smoke-test:
    name: Build & Smoke Test
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build Docker image
      run: |
        docker build -t police-raider:test .
        
    - name: Run smoke test
      run: |
        # Start container in background
        docker run -d --name test-container -p 3000:3000 \
          -e POLICE_RAIDER_MODE=mock \
          police-raider:test
          
        # Wait for container to start
        sleep 10
        
        # Run smoke tests
        curl -f http://localhost:3000/health || exit 1
        curl -f http://localhost:3000/readiness || exit 1
        curl -f "http://localhost:3000/api/crime/search?location=test" || exit 1
        
        # Cleanup
        docker stop test-container
        docker rm test-container

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [lint-and-test, security-scan, build-and-smoke-test]
    if: github.ref == 'refs/heads/main' || github.ref_name == 'develop'
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure staging deployment
      run: |
        echo "Deployment to staging would happen here"
        echo "Using environment variables from GitHub Secrets:"
        echo "- RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY && 'SET' || 'NOT SET' }}"
        echo "- Other secrets would be configured similarly"
        
    - name: Health check staging
      run: |
        echo "Would verify staging deployment health"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [deploy-staging]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Manual approval required
      run: |
        echo "Production deployment requires manual approval"
        echo "This job would deploy to production after approval"